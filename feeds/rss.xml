<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Patrick Cloke</title><link>https://patrick.cloke.us/</link><description></description><lastBuildDate>Fri, 24 Feb 2023 19:42:00 -0500</lastBuildDate><item><title>Python str CollectionÂ Gotchas</title><link>https://patrick.cloke.us/posts/2023/02/24/python-str-collection-gotchas/</link><description>&lt;p&gt;We have been slowly adding Python type hints &lt;a class="footnote-reference" href="#id6" id="id1"&gt;[1]&lt;/a&gt; to &lt;a class="reference external" href="https://github.com/matrix-org/synapse"&gt;Synapse&lt;/a&gt; and have made
great progress (see &lt;a class="reference external" href="https://matrix.org/blog/2021/12/03/type-coverage-for-sydent-motivation"&gt;some of our motivation&lt;/a&gt;). Through this process we have
learned a lot about Python and type hints. One bit that was unexpected is that
many of the &lt;a class="reference external" href="https://docs.python.org/3/library/collections.abc.html#collections-abstract-base-classes"&gt;abstract base classes&lt;/a&gt; representing groups of &lt;tt class="docutils literal"&gt;str&lt;/tt&gt; instances
also match an individual &lt;tt class="docutils literal"&gt;str&lt;/tt&gt; instance. This has resulted in more than one
&lt;em&gt;real&lt;/em&gt; bug for us &lt;a class="footnote-reference" href="#id7" id="id2"&gt;[2]&lt;/a&gt;: a function which has parameter of type &lt;tt class="docutils literal"&gt;Collection[str]&lt;/tt&gt;
was called with a &lt;tt class="docutils literal"&gt;str&lt;/tt&gt;, for example &lt;a class="footnote-reference" href="#id8" id="id3"&gt;[3]&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;destinations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Collection&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Send an event to a set of destinations.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;destination&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;destinations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# Do some HTTP.&lt;/span&gt;
        &lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;room&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Room&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Create &amp;amp; send an event.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;matrix.org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The correct version should call &lt;tt class="docutils literal"&gt;send&lt;/tt&gt; with a &lt;tt class="docutils literal"&gt;list&lt;/tt&gt; of destinations instead
of a single one. The &amp;#8220;s&amp;#8221; at the end of &amp;#8220;destinations&amp;#8221; takes on quite a bit of
importance! See the&amp;nbsp;fix:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gu"&gt;@@ -7,5 +7,5 @@&lt;/span&gt;
   def create_event(sender: str, content: str, room: Room) -&amp;gt; None:
       &amp;quot;&amp;quot;&amp;quot;Create &amp;amp; send an event.&amp;quot;&amp;quot;&amp;quot;
       event = Event(sender, content)
&lt;span class="gd"&gt;-      send(event, &amp;quot;matrix.org&amp;quot;)&lt;/span&gt;
&lt;span class="gi"&gt;+      send(event, [&amp;quot;matrix.org&amp;quot;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A possible solution is redefine the &lt;tt class="docutils literal"&gt;destinations&lt;/tt&gt; parameter as a &lt;tt class="docutils literal"&gt;List[str]&lt;/tt&gt;,
but this forces the caller to convert a &lt;tt class="docutils literal"&gt;set&lt;/tt&gt; or &lt;tt class="docutils literal"&gt;tuple&lt;/tt&gt; to a &lt;tt class="docutils literal"&gt;list&lt;/tt&gt;
(meaning iterating, allocate memory, etc.) or maybe using a &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;cast(...)&lt;/span&gt;&lt;/tt&gt; (and
thus losing some of the protections from type hints). As a team we have a desire
to keep the type hints of function parameters as broad as&amp;nbsp;possible.&lt;/p&gt;
&lt;p&gt;Put another way, &lt;tt class="docutils literal"&gt;str&lt;/tt&gt; is an instance of &lt;tt class="docutils literal"&gt;Collection[str]&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;Container[str]&lt;/tt&gt;,
&lt;tt class="docutils literal"&gt;Iterable[str]&lt;/tt&gt;, and &lt;tt class="docutils literal"&gt;Sequence[str]&lt;/tt&gt;. &lt;a class="footnote-reference" href="#id9" id="id4"&gt;[4]&lt;/a&gt; &lt;a class="footnote-reference" href="#id10" id="id5"&gt;[5]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Since our type hints are only used internally we do not need to worry too much
about accepting exotic types and eventually came up with &lt;a class="reference external" href="https://github.com/matrix-org/synapse/blob/335f52d595c2c32e4b512b97e2851bc98b819ca7/synapse/types/__init__.py#L84-L86"&gt;&lt;tt class="docutils literal"&gt;StrCollection&lt;/tt&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Collection[str] that does not include str itself; str being a Sequence[str]&lt;/span&gt;
&lt;span class="c1"&gt;# is very misleading and results in bugs.&lt;/span&gt;
&lt;span class="n"&gt;StrCollection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Union&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Tuple&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;AbstractSet&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This covers lists, tuples, sets, and frozen sets of &lt;tt class="docutils literal"&gt;str&lt;/tt&gt;, the one case it does
not seem to cover well is if you are using a dictionary as an &lt;tt class="docutils literal"&gt;Iterable[str]&lt;/tt&gt;,
the easy workaround there is to call &lt;tt class="docutils literal"&gt;keys()&lt;/tt&gt; on it to explicitly convert to a
&lt;a class="reference external" href="https://docs.python.org/3/library/collections.abc.html#collections.abc.KeysView"&gt;&lt;tt class="docutils literal"&gt;KeysView&lt;/tt&gt;&lt;/a&gt;, which inherits from &lt;tt class="docutils literal"&gt;Set&lt;/tt&gt;.&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id6" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Looking at the &lt;a class="reference external" href="https://github.com/matrix-org/synapse/commits/develop/mypy.ini"&gt;commits&lt;/a&gt; to &lt;tt class="docutils literal"&gt;mypy.ini&lt;/tt&gt; is probably the best way to see progress.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id7" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="https://github.com/matrix-org/synapse/issues/14809"&gt;matrix-org/synapse#14809&lt;/a&gt; is our tracking issue for fixing this, although
&lt;a class="reference external" href="https://github.com/matrix-org/synapse/pull/14880/files#diff-0b449f6f95672437cf04f0b5512572b4a6a729d2759c438b7c206ea249619885R1161"&gt;matrix-org/synapse#14880&lt;/a&gt; shows a concrete bug fix which occurred.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id8" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;This is heavily simplified, but hopefully illustrates the bug!&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id9" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id4"&gt;[4]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;And &lt;tt class="docutils literal"&gt;Reversible[str]&lt;/tt&gt;, but I don&amp;#8217;t think I have ever seen that used and
I think it less likely to introduce a bug.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id10" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id5"&gt;[5]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;bytes&lt;/tt&gt; doesn&amp;#8217;t have quite the same issue, but it might be surprising
that &lt;tt class="docutils literal"&gt;bytes&lt;/tt&gt; is an instance of &lt;tt class="docutils literal"&gt;Collection[int]&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;Container[int]&lt;/tt&gt;,
&lt;tt class="docutils literal"&gt;Iterable[int]&lt;/tt&gt;, and &lt;tt class="docutils literal"&gt;Sequence[int]&lt;/tt&gt;. I find this less likely to
introduce a bug.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Cloke</dc:creator><pubDate>Fri, 24 Feb 2023 19:42:00 -0500</pubDate><guid isPermaLink="false">tag:patrick.cloke.us,2023-02-24:/posts/2023/02/24/python-str-collection-gotchas/</guid><category>articles</category><category>python</category></item><item><title>Researching for a Matrix SpecÂ Change</title><link>https://patrick.cloke.us/posts/2023/01/12/researching-for-a-matrix-spec-change/</link><description>&lt;p&gt;The &lt;a class="reference external" href="https://spec.matrix.org/"&gt;Matrix protocol&lt;/a&gt; is modified via &lt;a class="reference external" href="https://spec.matrix.org/proposals/"&gt;Matrix Spec Changes&lt;/a&gt; (frequently abbreviated
to &amp;#8220;MSCs&amp;#8221;). These are short documents describing any technical changes and why they
are worth making (see &lt;a class="reference external" href="https://github.com/matrix-org/matrix-spec-proposals/pull/2457"&gt;an example&lt;/a&gt;). I&amp;#8217;ve &lt;a class="reference external" href="https://github.com/matrix-org/matrix-spec-proposals/pulls?q=is%3Apr+author%3Aclokep+label%3Aproposal"&gt;written a bunch&lt;/a&gt; and wanted to
document my research process. &lt;a class="footnote-reference" href="#id5" id="id1"&gt;[1]&lt;/a&gt;&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;I treat my research as a &lt;em&gt;living document&lt;/em&gt;, not an &lt;em&gt;artifact&lt;/em&gt;. Thus, I don&amp;#8217;t worry
much about the format. The important part is to start writing everything down
to have a single source of truth that can be shared with&amp;nbsp;others.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;First, I write out a &lt;strong&gt;problem statement&lt;/strong&gt;: what am I trying to solve? (This step
might seem obvious, but it is useful to frame the technical changes in why
they matter. Many proposals seem to skip this step.) Most of my work tends to be
from the point of view of an end-user, but some changes are purely technical. Regardless,
there is benefit from a shared written context of the issue to be&amp;nbsp;solved.&lt;/p&gt;
&lt;p&gt;From the above and prior knowledge, I list any &lt;strong&gt;open questions&lt;/strong&gt; (which I update
through this process). I&amp;#8217;ll augment the questions with answers I find in my research,
write new ones about things I don&amp;#8217;t understand, or remove them as they become&amp;nbsp;irrelevant.&lt;/p&gt;
&lt;p&gt;Next, I begin collecting any previous work done in this area,&amp;nbsp;including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;What is the &lt;strong&gt;current specification&lt;/strong&gt; related to this? I usually pull out blurbs
(with links back to the source) from &lt;a class="reference external" href="https://spec.matrix.org/v1.5/client-server-api/"&gt;the latest specification&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Are there any &lt;a class="reference external" href="https://github.com/matrix-org/matrix-spec/issues"&gt;&lt;strong&gt;related known issues&lt;/strong&gt;&lt;/a&gt;? It is also worth checking the issue
trackers of projects: I start with the &lt;a class="reference external" href="https://github.com/matrix-org/synapse"&gt;Synapse&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/vector-im/element-meta"&gt;Element Meta&lt;/a&gt;, and
&lt;a class="reference external" href="https://github.com/vector-im/element-web"&gt;Element Web&lt;/a&gt;&amp;nbsp;repositories.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Are there &lt;strong&gt;related outstanding MSCs&lt;/strong&gt; or &lt;strong&gt;previous research&lt;/strong&gt;? I search the
&lt;a class="reference external" href="https://github.com/matrix-org/matrix-spec-proposals/"&gt;matrix-spec-proposals&lt;/a&gt; repository for keywords, open anything that looks
vaguely related and then crawl those for mentions of other MSCs. I&amp;#8217;ll document
the related ones with links and a brief description of the proposed&amp;nbsp;change.&lt;/p&gt;
&lt;p&gt;I include both proposed and closed MSCs to check for previously rejected&amp;nbsp;ideas.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Are others interested in this? Have others had conversation about it? I roughly
follow the &lt;a class="reference external" href="https://matrix.to/#/#matrix-spec:matrix.org"&gt;#matrix-spec&lt;/a&gt; room or search for rooms that might be interested in
the topic. I would recommend joining the &lt;a class="reference external" href="https://matrix.to/#/#matrix-spec:matrix.org"&gt;#matrix-spec&lt;/a&gt; room for brainstorming
and&amp;nbsp;searching.&lt;/p&gt;
&lt;p&gt;This step can help uncover any missed known issues and MSCs. I will also ask
others with a longer history in the project if I am missing&amp;nbsp;anything.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;A brief &lt;strong&gt;competitive analysis&lt;/strong&gt; is performed. Information can be gleaned from
technical blog posts and &lt;span class="caps"&gt;API&lt;/span&gt; documentation. I consider not just competing
&lt;em&gt;products&lt;/em&gt;, but also investigate if others have solved similar &lt;em&gt;technical&lt;/em&gt;
problems. Other protocols are worth checking (e.g. &lt;span class="caps"&gt;IRC&lt;/span&gt;, &lt;span class="caps"&gt;XMPP&lt;/span&gt;, &lt;span class="caps"&gt;IMAP&lt;/span&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can see an example of my research on &lt;a class="reference external" href="https://patrick.cloke.us/posts/2023/01/05/matrix-read-receipts-and-notifications/"&gt;Matrix read receipts &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; notifications&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once I have compiled the above information, I jump into the &lt;strong&gt;current implementation&lt;/strong&gt;
to ensure it roughly matches the specification. &lt;a class="footnote-reference" href="#id6" id="id2"&gt;[2]&lt;/a&gt; I start considering what
protocol changes would solve the problem and are reasonable to implement. I find
it useful to write down all of my ideas, not just the one I think is best. &lt;a class="footnote-reference" href="#id7" id="id3"&gt;[3]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;At this point I&amp;nbsp;have:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A problem&amp;nbsp;statement&lt;/li&gt;
&lt;li&gt;A bunch of background about the current protocol, other proposed solutions,&amp;nbsp;etc.&lt;/li&gt;
&lt;li&gt;A list of open&amp;nbsp;questions&lt;/li&gt;
&lt;li&gt;Rough ideas for proposed&amp;nbsp;solutions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The next step is to iterate with my colleagues: answer any open questions, check
that our product goals will be met, and seek agreement that we are designing a
buildable solution. &lt;a class="footnote-reference" href="#id8" id="id4"&gt;[4]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Finally&lt;/em&gt;, I take the above and formalize it in into one or more Matrix Spec Changes.
At this point I&amp;#8217;ll think about error conditions / responses, backwards compatibility,
security concerns, and any other parts of the full &lt;span class="caps"&gt;MSC&lt;/span&gt;. Once it is documented, I
make a pull request with the proposal and self-review it for loose ends and clarity.
I leave comments for any parts I am unsure about or want to open discussion&amp;nbsp;on.&lt;/p&gt;
&lt;p&gt;Then I ask me colleagues to read through it and wait for feedback from both them and
any interested community members. It can be useful to be in the &lt;a class="reference external" href="https://matrix.to/#/#matrix-spec:matrix.org"&gt;#matrix-spec&lt;/a&gt; room
as folks might want to discuss the&amp;nbsp;proposal.&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id5" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;There&amp;#8217;s a useful &lt;a class="reference external" href="https://github.com/matrix-org/matrix-spec-proposals/blob/9b3f01b0193caa1e1c563cfc861ab021bcddcb2c/proposals/0000-proposal-template.md"&gt;proposal template&lt;/a&gt; that I eventually use, but I do much
of this process before constraining myself by that.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id6" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;This consists of looking through code as well as just trying it out by
manually making &lt;span class="caps"&gt;API&lt;/span&gt; calls or understanding how APIs power product features.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id7" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Part of the &lt;span class="caps"&gt;MSC&lt;/span&gt; proposal is documenting alternatives (and why you didn&amp;#8217;t
choose one of those). It is useful to brainstorm early before you&amp;#8217;re set
in a decision!&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id8" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id4"&gt;[4]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I usually do work with Matrix homeservers and am not as experienced with
clients. It is useful to bounce ideas off a client developer to understand
their needs.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Cloke</dc:creator><pubDate>Thu, 12 Jan 2023 15:24:00 -0500</pubDate><guid isPermaLink="false">tag:patrick.cloke.us,2023-01-12:/posts/2023/01/12/researching-for-a-matrix-spec-change/</guid><category>articles</category><category>matrix</category></item><item><title>Matrix Read Receipts &amp;Â Notifications</title><link>https://patrick.cloke.us/posts/2023/01/05/matrix-read-receipts-and-notifications/</link><description>&lt;p&gt;I recently wrapped up a project on improving notifications in threads for Matrix.
This is adapted from my &lt;a href="https://hackmd.io/bbucQKOLTv66N4B_wjDLFQ"&gt;research notes&lt;/a&gt;
to understand the status quo before adapting the Matrix protocol for threads
(in &lt;a href="https://github.com/matrix-org/matrix-spec-proposals/pull/3771"&gt;&lt;span class="caps"&gt;MSC3771&lt;/span&gt;&lt;/a&gt; and
&lt;a href="https://github.com/matrix-org/matrix-spec-proposals/pull/3773"&gt;&lt;span class="caps"&gt;MSC3773&lt;/span&gt;&lt;/a&gt;).
Hopefully others find the information&amp;nbsp;useful!&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;These notes are true as of the v1.3 of the Matrix spec and also cover some
Matrix spec changes which may or may not have been merged since. It is known
to be out of date with the changes from &lt;a href="https://github.com/matrix-org/matrix-spec-proposals/pull/2285"&gt;&lt;span class="caps"&gt;MSC2285&lt;/span&gt;&lt;/a&gt;,
&lt;a href="https://github.com/matrix-org/matrix-spec-proposals/pull/3771"&gt;&lt;span class="caps"&gt;MSC3771&lt;/span&gt;&lt;/a&gt;, and
&lt;a href="https://github.com/matrix-org/matrix-spec-proposals/pull/3773"&gt;&lt;span class="caps"&gt;MSC3773&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;Receipts&lt;/h2&gt;
&lt;p&gt;Matrix uses &amp;#8220;receipts&amp;#8221; to note which part of a room has been read by a user.
It considers the history for a room to be split into three sections&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Messages the user has read (or indicated they arenât interested in&amp;nbsp;them).&lt;/li&gt;
&lt;li&gt;Messages the user might have read some but not&amp;nbsp;others.&lt;/li&gt;
&lt;li&gt;Messages the user hasnât seen&amp;nbsp;yet.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The &lt;strong&gt;fully read marker&lt;/strong&gt; is between 1 &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; 2 while the &lt;strong&gt;read receipt&lt;/strong&gt; is between
2 &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; 3. Note that fully read markers are not shared with other users while read receipts&amp;nbsp;are.&lt;/p&gt;
&lt;p&gt;Another way to consider this is&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2"&gt;2&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Fully read marker&lt;/strong&gt;: a private bookmark to indicate the point which has been
   processed in the discussion. This allows a user to go back to it&amp;nbsp;later.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Read receipts&lt;/strong&gt;: public indicators of what a user has seen to inform other
   participants that the user has seen&amp;nbsp;it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hidden read receipts&lt;/strong&gt;: a private mechanism to synchronize &amp;#8220;unread messages&amp;#8221;
   indicators between a user&amp;#8217;s devices (while still retaining the ability from 1
   as a separate concept). (See &lt;a href="https://github.com/matrix-org/matrix-spec-proposals/pull/2285"&gt;&lt;span class="caps"&gt;MSC2285&lt;/span&gt;&lt;/a&gt;.)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a href="https://spec.matrix.org/v1.3/client-server-api/#fully-read-markers"&gt;Fully read&amp;nbsp;markers&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;They are stored in the room account data for the user (but modified via a separate &lt;span class="caps"&gt;API&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;The &lt;span class="caps"&gt;API&lt;/span&gt;&amp;nbsp;is:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;POST /_matrix/client/v3/rooms/{roomId}/read_markers&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The read receipt can optionally be updated at the same&amp;nbsp;time.&lt;/p&gt;
&lt;p&gt;In Element Web your fully read marker is displayed as the green line across the&amp;nbsp;conversation.&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://spec.matrix.org/v1.3/client-server-api/#receipts"&gt;Read&amp;nbsp;receipts&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Only &lt;code&gt;m.read&lt;/code&gt; is defined at the moment, but it is meant to be generic&amp;nbsp;infrastructure.&lt;/p&gt;
&lt;p&gt;Updating a read receipt updates a &amp;#8220;marker&amp;#8221; which causes any notifications prior
to and including the event to be marked as read.&lt;sup id="fnref:3"&gt;&lt;a class="footnote-ref" href="#fn:3"&gt;3&lt;/a&gt;&lt;/sup&gt; A user has a single read receipt
&amp;#8220;marker&amp;#8221; per&amp;nbsp;room.&lt;/p&gt;
&lt;p&gt;Passed to clients as an &lt;code&gt;m.receipt&lt;/code&gt; event under the &lt;code&gt;ephemeral&lt;/code&gt; array for each
room in the &lt;code&gt;/sync&lt;/code&gt; response. The event includes a map of event &lt;span class="caps"&gt;ID&lt;/span&gt; -&amp;gt; receipt type
-&amp;gt; user &lt;span class="caps"&gt;ID&lt;/span&gt; -&amp;gt; data (currently just a timestamp). Note that the event is a delta
from previous events. An&amp;nbsp;example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;$1435641916114394fHBLK:matrix.org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;quot;m.read&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;quot;@rikj:jki.re&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;quot;ts&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1436451550453&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;room_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;!jEsUZKDJdhlrceRyVU:example.org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;m.receipt&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;span class="caps"&gt;API&lt;/span&gt;&amp;nbsp;is:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;POST /_matrix/client/v3/rooms/{roomId}/receipt/{receiptType}/{eventId}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;In Element Web read receipts are the small avatars on the right hand side of the
conversation. Note that your own read receipt is not&amp;nbsp;shown.&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/matrix-org/matrix-spec-proposals/pull/2285"&gt;Hidden read receipts (&lt;span class="caps"&gt;MSC2285&lt;/span&gt;)&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A new receipt type (&lt;code&gt;m.read.hidden&lt;/code&gt;) to set a read receipt without sharing it with
other users. It also modifies the &lt;code&gt;/read_markers&lt;/code&gt; &lt;span class="caps"&gt;API&lt;/span&gt; to accept the new receipt type
and modifies the &lt;code&gt;/receipts&lt;/code&gt; &lt;span class="caps"&gt;API&lt;/span&gt; to accept the fully read&amp;nbsp;marker.&lt;/p&gt;
&lt;p&gt;This is useful to synchronize notifications across devices while keeping read
status&amp;nbsp;private.&lt;/p&gt;
&lt;h2&gt;&lt;a href="https://spec.matrix.org/v1.2/client-server-api/#push-rules"&gt;Push&amp;nbsp;rules&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A user&amp;#8217;s push rules determine one or more user-specific actions on each event.
They are customizable, but the homeserver provides default rules. They can result
in an action&amp;nbsp;to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Do&amp;nbsp;nothing&lt;/li&gt;
&lt;li&gt;Notify the user (&lt;code&gt;notify&lt;/code&gt; action), which can have additional actions (&amp;#8220;tweaks&amp;#8221;):&lt;ol&gt;
&lt;li&gt;Highlight the message (&lt;code&gt;highlight&lt;/code&gt; action)&lt;/li&gt;
&lt;li&gt;Play a sound (&lt;code&gt;sound&lt;/code&gt; action)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;By default, all new &lt;code&gt;m.room.message&lt;/code&gt; and &lt;code&gt;m.room.encrypted&lt;/code&gt; events generate a
notification, events with a user&amp;#8217;s display name or username in them or &lt;code&gt;@room&lt;/code&gt;
generate highlights,&amp;nbsp;etc.&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/matrix-org/matrix-spec-proposals/pull/3664"&gt;Push rules for relations (&lt;span class="caps"&gt;MSC3664&lt;/span&gt;)&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Augments push rules to allow applying them to the target of an event relationship
and defines a default push rule for replies (not using the reply&amp;nbsp;fallback).&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/matrix-org/matrix-spec-proposals/pull/2785"&gt;Event notification attributes and actions (&lt;span class="caps"&gt;MSC2785&lt;/span&gt;)&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A proposed replacement for push rules, the results are essentially the same
actions (and presumedly would not change the data returned in &lt;code&gt;/sync&lt;/code&gt;, see&amp;nbsp;below).&lt;/p&gt;
&lt;h2&gt;&lt;a href="https://spec.matrix.org/v1.3/client-server-api/#get_matrixclientv3sync"&gt;Notification counts in &lt;code&gt;/sync&lt;/code&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The number of notification events and highlight events since the user&amp;#8217;s last read
receipt are both returned on a per room basis as part of a &lt;code&gt;/sync&lt;/code&gt; response (for
joined&amp;nbsp;room).&lt;/p&gt;
&lt;p&gt;Notification and highlight events are any messages where the push rules resulted
in an action of &lt;code&gt;notify&lt;/code&gt; or &lt;code&gt;highlight&lt;/code&gt;, respectively. (Note that a &lt;code&gt;highlight&lt;/code&gt;
action must be a &lt;code&gt;notify&lt;/code&gt; action, thus &lt;code&gt;highlight_count &amp;lt;= notification_count&lt;/code&gt;.)&lt;/p&gt;
&lt;p&gt;An&amp;nbsp;example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;account_data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;ephemeral&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;state&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;summary&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;timeline&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;unread_notifications&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;quot;highlight_count&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;quot;notification_count&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a href="https://github.com/matrix-org/matrix-spec-proposals/pull/2654"&gt;Unread messages count (&lt;span class="caps"&gt;MSC2654&lt;/span&gt;)&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A new field is added under the &lt;code&gt;unread_notifications&lt;/code&gt; field (&lt;code&gt;unread_count&lt;/code&gt;) which
is the total number of events matching particular criteria since the user&amp;#8217;s last
read&amp;nbsp;receipt.&lt;/p&gt;
&lt;p&gt;This replaces &lt;a href="https://github.com/matrix-org/matrix-spec-proposals/pull/2625"&gt;&lt;span class="caps"&gt;MSC2625&lt;/span&gt;&lt;/a&gt;,
which adds a new push rule action (&lt;code&gt;mark_unread&lt;/code&gt;) to perform the same task. In this
rendition, &lt;code&gt;notify&lt;/code&gt; implies &lt;code&gt;mark_unread&lt;/code&gt; and thus
&lt;code&gt;highlight_count &amp;lt;= notification_count &amp;lt;= unread_count&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a href="https://spec.matrix.org/v1.2/push-gateway-api/#post_matrixpushv1notify"&gt;Push&amp;nbsp;notifications&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Push notifications receive either the number of unread messages (across all rooms)
or the number of rooms with unread messages (depending on the value of
&lt;code&gt;push.group_unread_count_by_room&lt;/code&gt; in the Synapse configuration). Unread messages
are any messages where the push rules resulted in an action of &lt;code&gt;notify&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This information is sent from the homeserver to the push gateway as part of every&amp;nbsp;notification:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;notifications&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;counts&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;quot;unread&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="err"&gt;...&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="err"&gt;...&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;From &lt;a href="https://spec.matrix.org/v1.3/client-server-api/#fully-read-markers"&gt;the fully read marker&lt;/a&gt; specification.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;See &lt;a href="https://github.com/matrix-org/matrix-spec-proposals/pull/2285#discussion_r436383889"&gt;a discussion on &lt;span class="caps"&gt;MSC2285&lt;/span&gt;&lt;/a&gt;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:3"&gt;
&lt;p&gt;&lt;a href="https://spec.matrix.org/v1.3/client-server-api/#receiving-notifications"&gt;Spec on receiving notifications&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref:3" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Cloke</dc:creator><pubDate>Thu, 05 Jan 2023 12:15:00 -0500</pubDate><guid isPermaLink="false">tag:patrick.cloke.us,2023-01-05:/posts/2023/01/05/matrix-read-receipts-and-notifications/</guid><category>articles</category><category>matrix</category><category>notes</category></item><item><title>Converting Twistedâs inlineCallbacks to async</title><link>https://patrick.cloke.us/posts/2021/06/11/converting-twisteds-inlinecallbacks-to-async/</link><description>
&lt;p&gt;Almost a year ago we had a push at Element to convert the remaining instances of
Twistedâs &lt;a class="reference external" href="https://twistedmatrix.com/documents/21.2.0/api/twisted.internet.defer.html#inlineCallbacks"&gt;&lt;tt class="docutils literal"&gt;inlineCallbacks&lt;/tt&gt;&lt;/a&gt; to use native &lt;tt class="docutils literal"&gt;async&lt;/tt&gt;/&lt;tt class="docutils literal"&gt;await&lt;/tt&gt; syntax from Python &lt;a class="footnote-reference" href="#id5" id="id1"&gt;[1]&lt;/a&gt;.
Eventually this work got covered by &lt;a class="reference external" href="https://github.com/matrix-org/synapse/issues/7988"&gt;issue #7988&lt;/a&gt; (which is the original basis
for thisÂ blogpost).&lt;/p&gt;
&lt;p&gt;Note that Twisted itself &lt;a class="reference external" href="https://twistedmatrix.com/documents/21.2.0/core/howto/defer-intro.html#coroutines-with-async-await"&gt;gained some support&lt;/a&gt; for &lt;tt class="docutils literal"&gt;async&lt;/tt&gt; functions inÂ 16.4.&lt;/p&gt;
&lt;div class="section" id="why-bother"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id9"&gt;WhyÂ bother?&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;inlineCallbacks&lt;/tt&gt; are very similar to &lt;tt class="docutils literal"&gt;async&lt;/tt&gt;/&lt;tt class="docutils literal"&gt;await&lt;/tt&gt;, they use a generator
internally to wait for a task to complete and (modern &lt;a class="footnote-reference" href="#id6" id="id2"&gt;[2]&lt;/a&gt;) versions of Twisted let
you directly return values. There are some real benefits to switchingÂ though:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;inlineCallbacks&lt;/tt&gt; mangle stack traces, while &lt;tt class="docutils literal"&gt;async&lt;/tt&gt;/&lt;tt class="docutils literal"&gt;await&lt;/tt&gt; does not
(as much). This helps with profiling and understanding exceptions (e.g. inÂ Sentry).&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;async&lt;/tt&gt;/&lt;tt class="docutils literal"&gt;await&lt;/tt&gt; is more modern and standard â thereâs a better chance of
people understanding it who donât havenât used TwistedÂ before.&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;async&lt;/tt&gt;/&lt;tt class="docutils literal"&gt;await&lt;/tt&gt; has better support from other packages, static analyzers,
tools,Â etc.&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;async&lt;/tt&gt; functions can provide better type hints for returnÂ values.&lt;/li&gt;
&lt;li&gt;We postulated that there might be a performance benefit, but were never able
to measureÂ any.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In fact the &lt;a class="reference external" href="https://twistedmatrix.com/documents/21.2.0/core/howto/defer-intro.html#inline-callbacks-using-yield"&gt;Twisted documentation&lt;/a&gt; (as of v21.2.0) even suggest some of theÂ above:&lt;/p&gt;
&lt;blockquote&gt;
Unless your code supports Python 2 (and therefore needs compatibility with older
versions of Twisted), writing coroutines with the functionality described in
âCoroutines with async/awaitâ is preferred over &lt;tt class="docutils literal"&gt;inlineCallbacks&lt;/tt&gt;. Coroutines
are supported by dedicated Python syntax, are compatible with &lt;tt class="docutils literal"&gt;asyncio&lt;/tt&gt;, and
provide higher performance.&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="example"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id10"&gt;Example&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As an example, consider this function from the &lt;a class="reference external" href="https://twistedmatrix.com/documents/21.2.0/core/howto/defer-intro.html#inline-callbacks-using-yield"&gt;Twisted documentation&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;twisted.internet.defer&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Deferred&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inlineCallbacks&lt;/span&gt;

&lt;span class="nd"&gt;@inlineCallbacks&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;makeRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# ... do some HTTP stuff ...&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;

&lt;span class="nd"&gt;@inlineCallbacks&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getUsers&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;responseBody&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;makeRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"GET"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"/users"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;responseBody&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reactor&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;getUsers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This could be rewritten to a bit more ofÂ modern:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;makeRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# ... do some HTTP stuff ...&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getUsers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;responseBody&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;makeRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"GET"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"/users"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;responseBody&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reactor&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;defer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ensureDeferred&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getUsers&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Not too big of a difference, but definitely a bit nicer. In particular,Â note:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Thereâs no decorator, so tools like mypy know what &lt;tt class="docutils literal"&gt;getUsers&lt;/tt&gt; actuallyÂ returns.&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;main&lt;/tt&gt; now includes a call to &lt;a class="reference external" href="https://twistedmatrix.com/documents/21.2.0/api/twisted.internet.defer.html#ensureDeferred"&gt;&lt;tt class="docutils literal"&gt;defer.ensureDeferred&lt;/tt&gt;&lt;/a&gt; to transition back to
something that Twisted understands. &lt;a class="footnote-reference" href="#id7" id="id3"&gt;[3]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="rules-for-conversion"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id11"&gt;Rules forÂ conversion&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The result of calling an &lt;tt class="docutils literal"&gt;async&lt;/tt&gt; function is an &lt;tt class="docutils literal"&gt;Awaitable&lt;/tt&gt;, the result of
calling an &lt;tt class="docutils literal"&gt;inlineCallbacks&lt;/tt&gt; function is a &lt;tt class="docutils literal"&gt;Deferred&lt;/tt&gt;. &lt;tt class="docutils literal"&gt;async&lt;/tt&gt; functions
use &lt;tt class="docutils literal"&gt;await&lt;/tt&gt; internally to wait for another &lt;tt class="docutils literal"&gt;Awaitable&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;inlineCallbacks&lt;/tt&gt;
use &lt;tt class="docutils literal"&gt;yield&lt;/tt&gt; internally to wait for another &lt;tt class="docutils literal"&gt;Deferred&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;This results in the followingÂ rules:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;You can &lt;tt class="docutils literal"&gt;await&lt;/tt&gt; a &lt;tt class="docutils literal"&gt;Deferred&lt;/tt&gt; (since it is also an &lt;tt class="docutils literal"&gt;Awaitable&lt;/tt&gt;).&lt;/li&gt;
&lt;li&gt;You cannot &lt;tt class="docutils literal"&gt;yield&lt;/tt&gt; an &lt;tt class="docutils literal"&gt;Awaitable&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;You can convert an &lt;tt class="docutils literal"&gt;Awaitable&lt;/tt&gt; into a &lt;tt class="docutils literal"&gt;Deferred&lt;/tt&gt; via &lt;tt class="docutils literal"&gt;defer.ensureDeferred&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;Calling &lt;tt class="docutils literal"&gt;await&lt;/tt&gt; on a non-&lt;tt class="docutils literal"&gt;Awaitable&lt;/tt&gt; is a runtime error (though note that
you can &lt;tt class="docutils literal"&gt;yield&lt;/tt&gt; on a non-&lt;tt class="docutils literal"&gt;Deferred&lt;/tt&gt; and it just immediatelyÂ continues).&lt;/li&gt;
&lt;li&gt;Twisted APIs still expect &lt;tt class="docutils literal"&gt;Deferreds&lt;/tt&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To convert a single function this turns out to be prettyÂ simple:&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="30%"/&gt;
&lt;col width="54%"/&gt;
&lt;col width="16%"/&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;What&lt;/th&gt;
&lt;th class="head"&gt;Twised&lt;/th&gt;
&lt;th class="head"&gt;asyncio&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Function definition&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;@defer.inlineCallbacks&lt;/tt&gt; decorator&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;async&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Wait for result&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;yield&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;await&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="methodology-for-conversion"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id12"&gt;Methodology forÂ conversion&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The difficult comes when you have a large codebase that you want to convert from
&lt;tt class="docutils literal"&gt;defer.inlineCallbacks&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;async&lt;/tt&gt;/&lt;tt class="docutils literal"&gt;await&lt;/tt&gt;. Below is how I approached this
for the SynapseÂ code:&lt;/p&gt;
&lt;p&gt;Since you can &lt;tt class="docutils literal"&gt;await&lt;/tt&gt; a &lt;tt class="docutils literal"&gt;Deferred&lt;/tt&gt; the easiest way to do this is to start at
the outer layers and work inward. By doing this you end up with &lt;tt class="docutils literal"&gt;async&lt;/tt&gt;
functions which call into code which return a &lt;tt class="docutils literal"&gt;Deferred&lt;/tt&gt;, but this isÂ fine.&lt;/p&gt;
&lt;p&gt;For Synapse we converted thingsÂ via:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;The &lt;span class="caps"&gt;REST&lt;/span&gt;Â layer.&lt;/li&gt;
&lt;li&gt;The handlerÂ layer.&lt;/li&gt;
&lt;li&gt;The databaseÂ layer.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In order to avoid doing an entire layer at once it is ideal to start with the
modules which are called into the least (and preferably only via a higher layer).
If there are other callers which have not yet been converted, the call-site is
modified to wrap the returned &lt;tt class="docutils literal"&gt;Awaitable&lt;/tt&gt; with &lt;tt class="docutils literal"&gt;defer.ensureDeferred&lt;/tt&gt;. Additionally,
this is used whenever a Twisted &lt;span class="caps"&gt;API&lt;/span&gt; expects a &lt;tt class="docutils literal"&gt;Deferred&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;span class="caps"&gt;REST&lt;/span&gt; layer in Synapse is built on &lt;tt class="docutils literal"&gt;twisted.web&lt;/tt&gt; and needed some extra magic,
see &lt;a class="reference external" href="https://github.com/matrix-org/synapse/blob/4b965c862dc66c0da5d3240add70e9b5f0aa720b/synapse/http/server.py#L228-L309"&gt;&lt;tt class="docutils literal"&gt;_AsyncResource&lt;/tt&gt;&lt;/a&gt; and sub-classes, in particularÂ it:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Overrides the &lt;tt class="docutils literal"&gt;render&lt;/tt&gt; method (which is a Twisted &lt;span class="caps"&gt;API&lt;/span&gt; from &lt;tt class="docutils literal"&gt;IResource&lt;/tt&gt;).&lt;ol class="arabic"&gt;
&lt;li&gt;Calls the async function with &lt;tt class="docutils literal"&gt;defer.ensureDeferred&lt;/tt&gt; to ensure it gets
scheduled with theÂ reactor.&lt;/li&gt;
&lt;li&gt;Returns &lt;tt class="docutils literal"&gt;NOT_DONE_YET&lt;/tt&gt; so that Twisted doesnât close theÂ connection.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;It then searches for a method called &lt;tt class="docutils literal"&gt;_async_render_&amp;lt;&lt;span class="caps"&gt;HTTP&lt;/span&gt; &lt;span class="caps"&gt;METHOD&lt;/span&gt;&amp;gt;&lt;/tt&gt; and calls
it with the &lt;tt class="docutils literal"&gt;Request&lt;/tt&gt; object.&lt;/li&gt;
&lt;li&gt;If the result is an &lt;tt class="docutils literal"&gt;Awaitable&lt;/tt&gt; it calls &lt;tt class="docutils literal"&gt;await&lt;/tt&gt; to get the ârealâÂ result.&lt;/li&gt;
&lt;li&gt;Finally it sends the response using TwistedÂ APIs.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="other-thoughts"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id13"&gt;OtherÂ thoughts&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Synapse code had many places which were undecorated functions which called
return a &lt;tt class="docutils literal"&gt;Deferred&lt;/tt&gt; via calling something else. While doing this conversion we
updated these functions to be &lt;tt class="docutils literal"&gt;async&lt;/tt&gt; and then internally &lt;tt class="docutils literal"&gt;await&lt;/tt&gt; the called
function, for clarity. (Originally this was done for performance, but the overhead
should be minimal when using &lt;tt class="docutils literal"&gt;async&lt;/tt&gt;/&lt;tt class="docutils literal"&gt;await&lt;/tt&gt;.)&lt;/p&gt;
&lt;p&gt;This also involved updating the tests to match the type as well (i.e. if a
function was made &lt;tt class="docutils literal"&gt;async&lt;/tt&gt; and we mock that function somewhere, the mock should
also be &lt;tt class="docutils literal"&gt;async&lt;/tt&gt;).&lt;/p&gt;
&lt;p&gt;While doing this we also fixed up some of the type hints of return values since
mypy will actually check them once you remove the &lt;tt class="docutils literal"&gt;defer.inlineCallbacks&lt;/tt&gt; decorator.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="measuring-progress"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id14"&gt;MeasuringÂ progress&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As part of this I threw together an â&lt;a class="reference external" href="https://patrick.cloke.us/areweasyncyet/"&gt;Are We Async Yet?&lt;/a&gt;â site. It is pretty
basic, but tracks the amount of code using &lt;tt class="docutils literal"&gt;defer.inlineCallbacks&lt;/tt&gt; vs. &lt;tt class="docutils literal"&gt;async&lt;/tt&gt;.
As a side-effect you can see how the code has grown over time (with a few instances
of major shrinking). &lt;a class="footnote-reference" href="#id8" id="id4"&gt;[4]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And last, but not least, I definitely did not convert all of Synapse myself! It
was done incrementally by the entire team over years! My coworkers mostly laid
the groundwork and I did much of the mechanical changes. Andâ¦weâre still not
&lt;em&gt;quite&lt;/em&gt; done, although the remaining places heavily interact with Twisted APIs
or manually generate a &lt;tt class="docutils literal"&gt;Deferred&lt;/tt&gt; and use &lt;tt class="docutils literal"&gt;addCallback&lt;/tt&gt; (so theyâre not
straightforward toÂ convert).&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id5" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"/&gt;&lt;col/&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Added in Python 3.5 via &lt;a class="reference external" href="https://www.python.org/dev/peps/pep-0492/"&gt;&lt;span class="caps"&gt;PEP&lt;/span&gt; 492&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id6" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"/&gt;&lt;col/&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Newer than version 15.0 according to the &lt;a class="reference external" href="https://twistedmatrix.com/documents/21.2.0/core/howto/defer-intro.html#inline-callbacks-using-yield"&gt;Twisted documentation&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id7" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"/&gt;&lt;col/&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;The &lt;a class="reference external" href="https://twistedmatrix.com/documents/21.2.0/core/howto/defer-intro.html#coroutines-with-async-await"&gt;documentation for async/await&lt;/a&gt; suggests using &lt;a class="reference external" href="https://twistedmatrix.com/documents/21.2.0/api/twisted.internet.defer.Deferred.html#fromCoroutine"&gt;&lt;tt class="docutils literal"&gt;Deferred.fromCoroutine&lt;/tt&gt;&lt;/a&gt;
instead, but that is new in Twisted v21.2.0.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id8" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"/&gt;&lt;col/&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id4"&gt;[4]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;You can &lt;a class="reference external" href="https://github.com/clokep/areweasyncyet"&gt;find the code on GitHub&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Cloke</dc:creator><pubDate>Fri, 11 Jun 2021 15:11:00 -0400</pubDate><guid isPermaLink="false">tag:patrick.cloke.us,2021-06-11:/posts/2021/06/11/converting-twisteds-inlinecallbacks-to-async/</guid><category>articles</category><category>twisted</category></item><item><title>celery-batches 0.5Â released!</title><link>https://patrick.cloke.us/posts/2021/05/24/celery-batches-0.5-released/</link><description>&lt;p&gt;A &lt;a class="reference external" href="https://pypi.org/project/celery-batches/0.5/"&gt;new version (v0.5)&lt;/a&gt; of &lt;a class="reference external" href="https://github.com/clokep/celery-batches/"&gt;celery-batches&lt;/a&gt; is available which adds support for
Celery 5.1 and fixes storing of results when using the &lt;a class="reference external" href="https://docs.celeryproject.org/en/v5.1.0/userguide/tasks.html#rpc-result-backend-rabbitmq-qpid"&gt;&lt;span class="caps"&gt;RPC&lt;/span&gt; result backend&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As &lt;a class="reference external" href="https://patrick.cloke.us/posts/2019/10/04/celery-amqp-backends/"&gt;explored previously&lt;/a&gt;, the &lt;span class="caps"&gt;RPC&lt;/span&gt; result backend works by having a results queue
per client, unfortunately celery-batches was attempting to store the results in
a queue named after the task &lt;span class="caps"&gt;ID&lt;/span&gt; instead of the client &lt;span class="caps"&gt;ID&lt;/span&gt; (Celery internally calls
this the &amp;#8220;correlation &lt;span class="caps"&gt;ID&lt;/span&gt;&amp;#8221;) &lt;a class="footnote-reference" href="#id2" id="id1"&gt;[1]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This unfortunately requires a change to client code to pass the batched request
into the &lt;tt class="docutils literal"&gt;mark_as_done&lt;/tt&gt; method, using the example &lt;a class="reference external" href="https://celery-batches.readthedocs.io/en/v0.5/"&gt;from the documnation&lt;/a&gt; with
the changed line&amp;nbsp;highlighted:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;urlparse&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;urlparse&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;celery_batches&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Batches&lt;/span&gt;

&lt;span class="n"&gt;wot_api_target&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://api.mywot.com/0.4/public_link_json&amp;#39;&lt;/span&gt;

&lt;span class="nd"&gt;@app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;task&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Batches&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flush_every&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flush_interval&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wot_api&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;sig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;
    &lt;span class="n"&gt;responses&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;wot_api_real&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# use mark_as_done to manually return response data&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;responses&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="hll"&gt;        &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;backend&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mark_as_done&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wot_api_real&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;domains&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;urlparse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;netloc&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;wot_api_target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hosts&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;domains&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;domain&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;domain&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;domains&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;The &lt;span class="caps"&gt;RPC&lt;/span&gt; backend has &lt;a class="reference external" href="https://github.com/celery/celery/blob/v5.1.0/celery/backends/rpc.py#L166"&gt;code which pulls out the correlation &lt;span class="caps"&gt;ID&lt;/span&gt;&lt;/a&gt;, but falls
back to the task &lt;span class="caps"&gt;ID&lt;/span&gt; if not given. This is called via an
&lt;a class="reference external" href="https://github.com/celery/celery/blob/v5.1.0/celery/backends/rpc.py#L198-L200"&gt;override of the &lt;tt class="docutils literal"&gt;store_result&lt;/tt&gt; method&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Cloke</dc:creator><pubDate>Mon, 24 May 2021 16:56:00 -0400</pubDate><guid isPermaLink="false">tag:patrick.cloke.us,2021-05-24:/posts/2021/05/24/celery-batches-0.5-released/</guid><category>articles</category><category>celery</category><category>celery-batches</category></item><item><title>A new maintainer forÂ django-allauth-2fa</title><link>https://patrick.cloke.us/posts/2021/05/07/django-allauth-2fa-transfer/</link><description>&lt;p&gt;I&amp;#8217;m excited to announce the &lt;a class="reference external" href="https://github.com/valohai/django-allauth-2fa/"&gt;django-allauth-2fa&lt;/a&gt; project has a new maintainer!
It can now be found under the &lt;a class="reference external" href="https://github.com/valohai/"&gt;valohai&lt;/a&gt; organization on GitHub, who have
&lt;a class="reference external" href="https://github.com/valohai/django-allauth-2fa/pulls?q=is%3Apr+author%3Aakx+is%3Aclosed"&gt;already contributed&lt;/a&gt; quite a bit to the&amp;nbsp;package.&lt;/p&gt;
&lt;p&gt;This project lets you easily add two-factor authentication to a Django project
using &lt;a class="reference external" href="https://www.intenct.nl/projects/django-allauth/"&gt;django-allauth&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As a bit of history, this package was originally created by &lt;a class="reference external" href="https://github.com/valberg"&gt;VÃ­Ã°ir Valberg GuÃ°mundsson&lt;/a&gt;.
The package was then adopted by a previous employer, Strongarm (while there I gave a
&lt;a class="reference external" href="https://patrick.cloke.us/posts/2017/04/06/adding-two-factor-authentication-to-django-with-django-allauth-lightning-talk/"&gt;talk at Django Boston&lt;/a&gt; about it). After acquisition we were phasing out support
for our own login (which I&amp;#8217;m not actually sure if this has been finished or not),
but were not really maintaining the package. &lt;a class="reference external" href="https://github.com/akx"&gt;Aarni Koskela&lt;/a&gt; asked about taking
over maintenance and we gratefully have transferred it to&amp;nbsp;them!&lt;/p&gt;
&lt;p&gt;There&amp;#8217;s much more you could do with this package so I&amp;#8217;m quite happy to see it in
the hands of someone actively using&amp;nbsp;it!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Cloke</dc:creator><pubDate>Fri, 07 May 2021 09:39:00 -0400</pubDate><guid isPermaLink="false">tag:patrick.cloke.us,2021-05-07:/posts/2021/05/07/django-allauth-2fa-transfer/</guid><category>articles</category><category>django</category><category>django-allauth-2fa</category></item><item><title>django-querysetsequence 0.14Â released!</title><link>https://patrick.cloke.us/posts/2021/02/26/django-querysetsequence-0-14-released/</link><description>&lt;p&gt;&lt;a class="reference external" href="https://github.com/clokep/django-querysetsequence/"&gt;django-querysetsequence&lt;/a&gt; 0.14 has been released with support for Django 3.2 (and
Python 3.9). django-querysetsequence is a Django package for
&lt;a class="reference external" href="https://patrick.cloke.us/posts/2016/02/04/combining-disparate-querysets-in-django/"&gt;treating multiple &lt;tt class="docutils literal"&gt;QuerySet&lt;/tt&gt; instances as a single &lt;tt class="docutils literal"&gt;QuerySet&lt;/tt&gt;&lt;/a&gt;, this can be useful
for treating similar models as a single model. The &lt;tt class="docutils literal"&gt;QuerySetSequence&lt;/tt&gt; class
supports &lt;a class="reference external" href="https://django-querysetsequence.readthedocs.io/en/latest/api.html"&gt;much of the &lt;span class="caps"&gt;API&lt;/span&gt;&lt;/a&gt; available to &lt;tt class="docutils literal"&gt;QuerySet&lt;/tt&gt; instances.&lt;/p&gt;
&lt;p&gt;The marquee features of this release&amp;nbsp;are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Support for &lt;a class="reference external" href="https://docs.djangoproject.com/en/dev/ref/models/querysets/#values"&gt;&lt;tt class="docutils literal"&gt;values()&lt;/tt&gt;&lt;/a&gt; and &lt;a class="reference external" href="https://docs.djangoproject.com/en/dev/ref/models/querysets/#values-list"&gt;&lt;tt class="docutils literal"&gt;values_list()&lt;/tt&gt;&lt;/a&gt; to retrieve the results as
dictionaries / tuples (instead of &lt;tt class="docutils literal"&gt;Model&lt;/tt&gt; instances).&lt;/li&gt;
&lt;li&gt;Partial support for &lt;a class="reference external" href="https://docs.djangoproject.com/en/dev/ref/models/querysets/#distinct"&gt;&lt;tt class="docutils literal"&gt;distinct()&lt;/tt&gt;&lt;/a&gt; &amp;#8212; this is only supported when each underlying
&lt;tt class="docutils literal"&gt;QuerySet&lt;/tt&gt; is a unique &lt;tt class="docutils literal"&gt;Model&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://django-querysetsequence.readthedocs.io/"&gt;Prettier documentation&lt;/a&gt; is&amp;nbsp;available.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The full changelog is included&amp;nbsp;below:&lt;/p&gt;
&lt;div class="section" id="features"&gt;
&lt;h2&gt;Features&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Support Django 3.2 (&lt;a class="reference external" href="https://github.com/clokep/django-querysetsequence/pull/78"&gt;#78&lt;/a&gt;,
&lt;a class="reference external" href="https://github.com/clokep/django-querysetsequence/pull/81"&gt;#81&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Support Python 3.9. (&lt;a class="reference external" href="https://github.com/clokep/django-querysetsequence/pull/78"&gt;#78&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Support the &lt;tt class="docutils literal"&gt;values()&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;values_list()&lt;/tt&gt; methods.
(&lt;a class="reference external" href="https://github.com/clokep/django-querysetsequence/pull/73"&gt;#73&lt;/a&gt;,
&lt;a class="reference external" href="https://github.com/clokep/django-querysetsequence/pull/74"&gt;#74&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Support the &lt;tt class="docutils literal"&gt;distinct()&lt;/tt&gt; method when each &lt;tt class="docutils literal"&gt;QuerySet&lt;/tt&gt; instance is from a
unique model. Contributed by
&lt;a class="reference external" href="https://github.com/jpic"&gt;&amp;#64;jpic&lt;/a&gt;. (&lt;a class="reference external" href="https://github.com/clokep/django-querysetsequence/pull/77"&gt;#77&lt;/a&gt;,
&lt;a class="reference external" href="https://github.com/clokep/django-querysetsequence/pull/80"&gt;#80&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add &lt;a class="reference external" href="https://django-querysetsequence.readthedocs.io/"&gt;Sphinx documentation&lt;/a&gt;
which is available at Read the&amp;nbsp;Docs.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="bugfixes"&gt;
&lt;h2&gt;Bugfixes&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Support calling &lt;tt class="docutils literal"&gt;filter()&lt;/tt&gt; with &lt;a class="reference external" href="https://docs.djangoproject.com/en/dev/ref/models/querysets/#q-objects"&gt;&lt;tt class="docutils literal"&gt;Q()&lt;/tt&gt; objects&lt;/a&gt;. Contributed by
&lt;a class="reference external" href="https://github.com/jpic"&gt;&amp;#64;jpic&lt;/a&gt;. (&lt;a class="reference external" href="https://github.com/clokep/django-querysetsequence/pull/76"&gt;#76&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="miscellaneous"&gt;
&lt;h2&gt;Miscellaneous&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Add an additional test for the interaction of &lt;tt class="docutils literal"&gt;order_by()&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;only()&lt;/tt&gt;.
(&lt;a class="reference external" href="https://github.com/clokep/django-querysetsequence/pull/72"&gt;#72&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Support Django &lt;span class="caps"&gt;REST&lt;/span&gt; Framework 3.12. (&lt;a class="reference external" href="https://github.com/clokep/django-querysetsequence/pull/75"&gt;#75&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Switch continuous integration to GitHub Actions. (&lt;a class="reference external" href="https://github.com/clokep/django-querysetsequence/pull/79"&gt;#79&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Drop support for Python 3.5. (&lt;a class="reference external" href="https://github.com/clokep/django-querysetsequence/pull/82"&gt;#82&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Cloke</dc:creator><pubDate>Fri, 26 Feb 2021 12:31:00 -0500</pubDate><guid isPermaLink="false">tag:patrick.cloke.us,2021-02-26:/posts/2021/02/26/django-querysetsequence-0-14-released/</guid><category>articles</category><category>django</category><category>django-querysetsequence</category></item><item><title>celery-batches 0.4Â released!</title><link>https://patrick.cloke.us/posts/2020/11/30/celery-batches-0.4-released/</link><description>&lt;p&gt;Earlier today I released a version &lt;a class="reference external" href="https://pypi.org/project/celery-batches/0.4/"&gt;0.4&lt;/a&gt; of &lt;a class="reference external" href="https://github.com/clokep/celery-batches/"&gt;celery-batches&lt;/a&gt; with support for
Celery 5.0. As part of this release support for Python &amp;lt; 3.6 was dropped and
support for Celery &amp;lt; 4.4 was&amp;nbsp;dropped.&lt;/p&gt;
&lt;p&gt;celery-batches is a small library that allows you process multiple calls to a
&lt;a class="reference external" href="https://github.com/celery/celery/"&gt;Celery&lt;/a&gt; task together. The batches can be processed based on a count of task
calls or a timer. It started as an update of the &lt;tt class="docutils literal"&gt;celery.contrib.batches&lt;/tt&gt;
code to support Celery 4.0+ and has grown to support some additional&amp;nbsp;features.&lt;/p&gt;
&lt;p&gt;The project was also transferred on GitHub to my personal namespace (from my
previous employer). Realistically it was maintained by me already and this is
just a formality. As part of this release the &lt;a class="reference external" href="https://celery-batches.readthedocs.io/en/v0.4/"&gt;documentation&lt;/a&gt; is now available
on Read the&amp;nbsp;Docs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Cloke</dc:creator><pubDate>Mon, 30 Nov 2020 16:50:00 -0500</pubDate><guid isPermaLink="false">tag:patrick.cloke.us,2020-11-30:/posts/2020/11/30/celery-batches-0.4-released/</guid><category>articles</category><category>celery</category><category>celery-batches</category></item><item><title>django-render-block 0.8 (and 0.8.1)Â released!</title><link>https://patrick.cloke.us/posts/2020/10/27/django-render-block-0.8-released/</link><description>&lt;p&gt;A couple of weeks ago I released version 0.8 of &lt;a class="reference external" href="https://github.com/clokep/django-render-block/"&gt;django-render-block&lt;/a&gt;, this was
followed up with a 0.8.1 to fix a&amp;nbsp;regression.&lt;/p&gt;
&lt;p&gt;django-render-block is a small library that allows you render a specific &lt;tt class="docutils literal"&gt;block&lt;/tt&gt;
from a Django (or Jinja) template, this is frequently used for emails when you
want multiple pieces of an email together in a single template (e.g. the subject,
&lt;span class="caps"&gt;HTML&lt;/span&gt; body, and text body), but they need to be rendered separately before&amp;nbsp;sending.&lt;/p&gt;
&lt;p&gt;See the example&amp;nbsp;below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;subject&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;Hello from django-render-block!&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;text&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;Hello!&lt;/span&gt;

&lt;span class="x"&gt;This is the text email body!&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;html&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;&amp;lt;h1&amp;gt;Hello!&amp;lt;/h1&amp;gt;&lt;/span&gt;

&lt;span class="x"&gt;&amp;lt;p&amp;gt;This is the &amp;lt;b&amp;gt;HTML&amp;lt;/b&amp;gt; email body!&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using django-render-block, each &lt;tt class="docutils literal"&gt;block&lt;/tt&gt; can be rendered separately and then
passed into Django&amp;#8217;s &lt;a class="reference external" href="https://docs.djangoproject.com/en/3.1/topics/email/"&gt;email system&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core.mail&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;send_mail&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;render_block&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;render_block_to_string&lt;/span&gt;

&lt;span class="n"&gt;subject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;render_block_to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;email.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;subject&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;text_body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;render_block_to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;email.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;text&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;html_body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;render_block_to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;email.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;send_mail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;text_body&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;html_message&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;html_body&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This particular release of django-render-block includes support for passing
a fully instantiated &lt;a class="reference external" href="https://docs.djangoproject.com/en/dev/ref/templates/api/#django.template.Context"&gt;&lt;tt class="docutils literal"&gt;Context&lt;/tt&gt;&lt;/a&gt; (instead of a simple &lt;tt class="docutils literal"&gt;dict&lt;/tt&gt;) into
&lt;tt class="docutils literal"&gt;render_block_to_string&lt;/tt&gt;. This allows the caller to control whether
&lt;tt class="docutils literal"&gt;autoescape&lt;/tt&gt; is enabled and a few other&amp;nbsp;features.&lt;/p&gt;
&lt;p&gt;The full changelog is included&amp;nbsp;below:&lt;/p&gt;
&lt;div class="section" id="october-15-2020"&gt;
&lt;h2&gt;0.8.1 (October 15,&amp;nbsp;2020)&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Fixes a regression in v0.8 where a &lt;tt class="docutils literal"&gt;Context&lt;/tt&gt; could not be re-used. Contributed
by &lt;a class="reference external" href="https://github.com/evanbrumley"&gt;&amp;#64;evanbrumley&lt;/a&gt;. (&lt;a class="reference external" href="https://github.com/clokep/django-render-block/pull/25"&gt;#25&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="october-6-2020"&gt;
&lt;h2&gt;0.8 (October 6,&amp;nbsp;2020)&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;render_block_to_string&lt;/tt&gt; now forwards the &lt;tt class="docutils literal"&gt;Context&lt;/tt&gt; passed as &lt;tt class="docutils literal"&gt;context&lt;/tt&gt; parameter.
Contributed by &lt;a class="reference external" href="https://github.com/bblanchon"&gt;&amp;#64;bblanchon&lt;/a&gt;. (&lt;a class="reference external" href="https://github.com/clokep/django-render-block/pull/21"&gt;#21&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Drop support for Python 3.5, officially support Python 3.9. (&lt;a class="reference external" href="https://github.com/clokep/django-render-block/pull/22"&gt;#22&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Cloke</dc:creator><pubDate>Tue, 27 Oct 2020 16:57:00 -0400</pubDate><guid isPermaLink="false">tag:patrick.cloke.us,2020-10-27:/posts/2020/10/27/django-render-block-0.8-released/</guid><category>articles</category><category>django</category><category>django-render-block</category></item><item><title>Instantbird Blog: WordPress toÂ Pelican</title><link>https://patrick.cloke.us/posts/2020/09/09/instantbird-blog-wordpress-to-pelican/</link><description>&lt;p&gt;The &lt;a class="reference external" href="https://blog.instantbird.org"&gt;Instantbird blog&lt;/a&gt; is now (as of mid-April 2020) hosted on GitHub Pages
(instead of self-hosted &lt;a class="reference external" href="https://wordpress.com/"&gt;WordPress&lt;/a&gt;) &lt;a class="footnote-reference" href="#id5" id="id1"&gt;[1]&lt;/a&gt;. Hopefully it was converted faithfully,
but feel free to let us know if you see something broken! You can file an issue
at &lt;a class="reference external" href="https://github.com/instantbird/blog.instantbird.org/"&gt;the repo for the blog&lt;/a&gt; or just comment&amp;nbsp;below.&lt;/p&gt;
&lt;p&gt;Note that there are some changes due to being a static site instead of being
backed by a dynamic language. Most of these would be around editing the blog,
which we don&amp;#8217;t do anymore. The biggest user-facing change was that
&lt;a class="reference external" href="https://github.com/instantbird/blog.instantbird.org/blob/source/theme/templates/searchform.html"&gt;search is now via DuckDuckGo&lt;/a&gt; instead of being built into the&amp;nbsp;site.&lt;/p&gt;
&lt;p&gt;This was a bit of an arduous process with some trial and error. See below for
some of the details. Overall I did this work over 3 years (!!!), starting in
April of 2017 and getting the site live in April of 2020. It was mostly done in
5 sprints with some long gaps&amp;nbsp;between.&lt;/p&gt;
&lt;p&gt;As some background, the Instantbird blog was originally (in 2007) served via
Florian&amp;#8217;s custom blog engine &lt;a class="footnote-reference" href="#id6" id="id2"&gt;[2]&lt;/a&gt;. In 2011 it was
&lt;a class="reference external" href="https://blog.instantbird.org/2011/10/weekly-meeting-october-10-2011/"&gt;converted to WordPress by an Instantbird contributor&lt;/a&gt;. This initial conversion
was not done perfectly and I attempted to fix some of these issues when
converting from WordPress to Pelican &lt;a class="footnote-reference" href="#id7" id="id3"&gt;[3]&lt;/a&gt;. The general steps I was hoping to&amp;nbsp;follow:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Setup the project using the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;pelican-quickstart&lt;/span&gt;&lt;/tt&gt; comment.&lt;/li&gt;
&lt;li&gt;Export the content via WordPress to &lt;span class="caps"&gt;XML&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;Use the Pelican &lt;a class="reference external" href="https://docs.getpelican.com/en/3.7.1/importer.html"&gt;WordPress importer&lt;/a&gt; to convert the content to reStructuredText. &lt;a class="footnote-reference" href="#id8" id="id4"&gt;[4]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Go through the conversion by hand and fix any&amp;nbsp;oddities.&lt;/li&gt;
&lt;li&gt;Convert the &lt;span class="caps"&gt;PHP&lt;/span&gt; theme to &lt;a class="reference external" href="https://jinja.palletsprojects.com/"&gt;Jinja2&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This plan mostly held together through the process, but I ran into some
roadblocks, most of which were easily&amp;nbsp;overcome:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;For some reason the WordPress import failed halfway through and didn&amp;#8217;t convert
every article. I didn&amp;#8217;t investigate why and &lt;a class="reference external" href="https://github.com/instantbird/blog.instantbird.org/commit/d94b2fc4bd8d45d993c080daf215dbdd91298ae3"&gt;added the missing files manually&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A variety of hard-coded &lt;span class="caps"&gt;HTML&lt;/span&gt; made it through the conversion. This was manually
converted to&amp;nbsp;reStructuredText.&lt;/li&gt;
&lt;li&gt;Converting the theme was much harder than expected and involved reading
WordPress documentation to understand various functions the &lt;span class="caps"&gt;PHP&lt;/span&gt; templates&amp;nbsp;called.&lt;/li&gt;
&lt;li&gt;Wrote a &lt;a class="reference external" href="https://github.com/instantbird/blog.instantbird.org/blob/source/plugins/archives.py"&gt;custom archive plugin&lt;/a&gt; to be able to articles by year / month /&amp;nbsp;day.&lt;/li&gt;
&lt;li&gt;The alignment of images needed to be fixed (and lots of WordPress styles&amp;nbsp;removed).&lt;/li&gt;
&lt;li&gt;Some of our posts had multiple categories on them, which is not allowed in
Pelican. Generally these overlapped with tags and I decided the easiest path
here was to modify the content to have a single category per&amp;nbsp;article.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A huge piece of work was that comments were not imported. I did not care about
people being able to write &lt;em&gt;new&lt;/em&gt; comments, but I wanted the old content there.
For this I planned to use the &lt;a class="reference external" href="https://github.com/getpelican/pelican-plugins/tree/master/pelican_comment_system"&gt;pelican_comment_system plugin&lt;/a&gt;, but I needed to
get the comments into a format that it understood (from the WordPress &lt;span class="caps"&gt;XML&lt;/span&gt; export
discussed&amp;nbsp;above).&lt;/p&gt;
&lt;p&gt;I ended up &lt;a class="reference external" href="https://github.com/instantbird/blog.instantbird.org/blob/source/wp2comments.py"&gt;writing a custom script&lt;/a&gt; based on the &lt;a class="reference external" href="https://github.com/getpelican/pelican/blob/4.2.0/pelican/tools/pelican_import.py"&gt;pelican_import&lt;/a&gt; code to
iterate the comments in the &lt;span class="caps"&gt;XML&lt;/span&gt; file and write a reStructuredText file for each
comment. There was quite a bit of trial and error here, but I think the result
was reasonable. This also needed to handle comment threads and pingbacks, which
added some&amp;nbsp;wrinkles.&lt;/p&gt;
&lt;p&gt;The final step here was to get gravatars for comments working. The
pelican_comment_system supports identicons only, but I was able to
&lt;a class="reference external" href="https://github.com/instantbird/blog.instantbird.org/blob/source/plugins/comments.py"&gt;combine it and the gravatar plugin&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;One final piece was generating a reasonable 404 page. The WordPress one some
features that required two more custom plugins: a &lt;a class="reference external" href="https://github.com/instantbird/blog.instantbird.org/blob/source/plugins/tag_cloud.py"&gt;tag cloud&lt;/a&gt; and a list of the
&lt;a class="reference external" href="https://github.com/instantbird/blog.instantbird.org/blob/source/plugins/most_used_categories.py"&gt;most used categories&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There was a few other odds-and-ends that aren&amp;#8217;t really worth mentioning, but
overall I&amp;#8217;m quite happy with the result! Just to be clear, there&amp;#8217;s no plans to
restart development of Instantbird, but I wanted the blog content to archived
and searchable. There&amp;#8217;s some &lt;a class="reference external" href="https://blog.instantbird.org/2011/06/introducing-time-bubbles/"&gt;interesting&lt;/a&gt; &lt;a class="reference external" href="https://blog.instantbird.org/2013/07/first-milestone-of-the-awesometab-has-landed/"&gt;articles&lt;/a&gt; on there about &lt;a class="reference external" href="https://blog.instantbird.org/2012/08/tab-completion-in-instantbird-1-2/"&gt;design&lt;/a&gt;
&lt;a class="reference external" href="https://blog.instantbird.org/2011/06/introducing-magic-copy/"&gt;decisions&lt;/a&gt;. Many of which are features I miss&amp;nbsp;today!&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id5" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Reasons for wanting to do this included reducing the infrastructure we
were maintaining and that the WordPress version was vulnerable. An
additional benefit is that it let us easily add &lt;span class="caps"&gt;TLS&lt;/span&gt;.&lt;!-- See https://bugzilla.mozilla.org/show_bug.cgi?id=1346658 --&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id6" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I don&amp;#8217;t think there&amp;#8217;s any information about this engine anywhere, nor do
I think the source was released.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id7" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;The main issues were images / resources that were not properly moved.
Luckily I was able to recover them using the &lt;a class="reference external" href="https://archive.org/"&gt;Internet Archive&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id8" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id4"&gt;[4]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I started doing this work on Pelican 3.7.1 and switched to 4.2.0, in
general everything in this article should be valid up through Pelican
4.2.0, however.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Cloke</dc:creator><pubDate>Wed, 09 Sep 2020 17:10:00 -0400</pubDate><guid isPermaLink="false">tag:patrick.cloke.us,2020-09-09:/posts/2020/09/09/instantbird-blog-wordpress-to-pelican/</guid><category>articles</category><category>Instantbird</category><category>pelican</category></item></channel></rss>