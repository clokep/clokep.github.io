<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Patrick Cloke - blog</title><link>https://patrick.cloke.us/</link><description></description><lastBuildDate>Sun, 06 Jul 2014 18:36:00 -0400</lastBuildDate><item><title>New Blog: Serving the Content</title><link>https://patrick.cloke.us/posts/2014/07/06/new-blog-serving-the-content/</link><description>
&lt;p&gt;In the &lt;a class="reference external" href="https://patrick.cloke.us/posts/2014/07/03/new-blog/"&gt;first part&lt;/a&gt; of this blog post I talked about using Pelican to create a
blog, this is a bit more about how I got it up and running.&lt;/p&gt;
&lt;div class="section" id="getting-a-domain"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;Getting a Domain&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The most exciting part! Getting a domain! I used &lt;a class="reference external" href="https://www.gandi.net/"&gt;gandi.net&lt;/a&gt;, it was
recommended to me by &lt;a class="reference external" href="http://blog.queze.net/"&gt;Florian&lt;/a&gt; as “awesome, but a bit expensive”. I liked that
they actually explain &lt;a class="reference external" href="https://www.gandi.net/domain/interface"&gt;exactly&lt;/a&gt; what I was getting by registering a domain
through them. Nowhere else I looked was this explicit.&lt;/p&gt;
&lt;p&gt;Once you get your domain you’ll need to set up your &lt;a class="reference external" href="https://en.wikipedia.org/wiki/CNAME"&gt;&lt;span class="caps"&gt;CNAME&lt;/span&gt;&lt;/a&gt; record to forward to
wherever you’re serving your content. I found it pretty interesting that gandi
essentially gives you an &lt;a class="reference external" href="https://en.wikipedia.org/wiki/DNS_zone"&gt;&lt;span class="caps"&gt;DNS&lt;/span&gt; zone&lt;/a&gt; file to modify. I ended up making a few modifications:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Created a patrick subdomain (patrick.cloke.us)&lt;/li&gt;
&lt;li&gt;Redirected the apex domain (cloke.us) to the patrick subdomain&lt;/li&gt;
&lt;li&gt;Redirected the www subdomain to the patrick subdomain&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also created a few email aliases which forward to the email accounts I already own.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="serving-the-content"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;Serving the Content&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class="caps"&gt;OK&lt;/span&gt;, we have a domain! We have content! How do we actually link them!? I used
&lt;a class="reference external" href="https://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;, cause I’m cheap and don’t like to pay for things. The quick version:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Create a repository that is named &lt;tt class="docutils literal"&gt;&amp;lt;your account &lt;span class="pre"&gt;name&amp;gt;.github.io&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Push whatever &lt;span class="caps"&gt;HTML&lt;/span&gt; content you want into the master branch&lt;/li&gt;
&lt;li&gt;Voila it’s available as &amp;lt;your account name&amp;gt;.github.io&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Personally, I store my Pelican code in a separate &lt;a class="reference external" href="https://github.com/clokep/clokep.github.io"&gt;source&lt;/a&gt; branch &lt;a class="footnote-reference" href="#footnote-1" id="footnote-reference-1"&gt;[1]&lt;/a&gt; and use
&lt;a class="reference external" href="https://github.com/davisp/ghp-import"&gt;ghp-import&lt;/a&gt; to actually publish my content. I’ve automated a lot of the tasks by
&lt;a class="reference external" href="https://github.com/clokep/clokep.github.io/blob/source/fabfile.py"&gt;extending&lt;/a&gt; the default &lt;a class="reference external" href="http://www.fabfile.org/"&gt;fabfile.py&lt;/a&gt; that is generated with the quickstart. My
workflow looks something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;komodo&lt;span class="w"&gt; &lt;/span&gt;content/new-article.rst
&lt;span class="c1"&gt;# &amp;lt;edit article&amp;gt;&lt;/span&gt;
&lt;span class="c1"&gt;# &amp;lt;check it out in a browser using fab build/serve/regenerate&amp;gt;&lt;/span&gt;
git&lt;span class="w"&gt; &lt;/span&gt;add&lt;span class="w"&gt; &lt;/span&gt;content/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;commit&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Add 'New Article!'."&lt;/span&gt;
fab&lt;span class="w"&gt; &lt;/span&gt;publish&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# Which runs "ghp-import -p -b master output" underneath!&lt;/span&gt;
git&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;origin&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;One other thing you’ll need to do is add a &lt;span class="caps"&gt;CNAME&lt;/span&gt; file that has the domain of
your host in it (and only the domain). I found the GitHub documents on this
extremely confusing, but it’s pretty simple:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Create a file called &lt;span class="caps"&gt;CNAME&lt;/span&gt; somewhere you have static files in Pelican (mine is
at content/static/&lt;span class="caps"&gt;CNAME&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;Add a line to your pelicanconf.py to have this file end up in the root:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Set up static content and output locations.&lt;/span&gt;
&lt;span class="n"&gt;STATIC_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s1"&gt;'images'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'static/CNAME'&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;EXTRA_PATH_METADATA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;'static/CNAME'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'CNAME'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It took 10 - 20 minutes for this to “kick in” on GitHub, until that time I had a
404 GitHub page.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="redirect-blogger"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-3"&gt;Redirect Blogger&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is the really fun part. How the hell do we redirect blogger links to
actually go to the new location of each blog post? With some hackery, some luck,
and some magic.&lt;/p&gt;
&lt;p&gt;I found some help in an article about &lt;a class="reference external" href="http://www.labnol.org/internet/switch-from-blogger-to-wordpress/9707/"&gt;switching to WordPress from Blogger&lt;/a&gt; and
modified the template they had there. On the Blogger dashboard, choose
“Template”, scroll to the bottom and click “Revert to Classic Template”. Then
use something like the following template:&lt;/p&gt;
&lt;pre class="code xml highlight literal-block"&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;$BlogPageTitle$&amp;gt;&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;MainOrArchivePage&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;window.location.href&lt;span class="w"&gt; &lt;/span&gt;=&lt;span class="w"&gt; &lt;/span&gt;"http://patrick.cloke.us/";&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/MainOrArchivePage&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;Blogger&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;ItemPage&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;//&lt;span class="w"&gt; &lt;/span&gt;This&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;full&lt;span class="w"&gt; &lt;/span&gt;permalink.&lt;span class="w"&gt;
                    &lt;/span&gt;var&lt;span class="w"&gt; &lt;/span&gt;permalink&lt;span class="w"&gt; &lt;/span&gt;=&lt;span class="w"&gt; &lt;/span&gt;"&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;$BlogItemPermalinkURL$&amp;gt;";&lt;span class="w"&gt;
                    &lt;/span&gt;//&lt;span class="w"&gt; &lt;/span&gt;Split&lt;span class="w"&gt; &lt;/span&gt;up&lt;span class="w"&gt; &lt;/span&gt;each&lt;span class="w"&gt; &lt;/span&gt;part&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;slash.&lt;span class="w"&gt;
                    &lt;/span&gt;var&lt;span class="w"&gt; &lt;/span&gt;parts&lt;span class="w"&gt; &lt;/span&gt;=&lt;span class="w"&gt; &lt;/span&gt;permalink.split("/");&lt;span class="w"&gt;
                    &lt;/span&gt;//&lt;span class="w"&gt; &lt;/span&gt;Take&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;last&lt;span class="w"&gt; &lt;/span&gt;part&lt;span class="w"&gt; &lt;/span&gt;(the&lt;span class="w"&gt; &lt;/span&gt;page)&lt;span class="w"&gt; &lt;/span&gt;and&lt;span class="w"&gt; &lt;/span&gt;strip&lt;span class="w"&gt; &lt;/span&gt;off&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;.html.&lt;span class="w"&gt;
                    &lt;/span&gt;var&lt;span class="w"&gt; &lt;/span&gt;slug&lt;span class="w"&gt; &lt;/span&gt;=&lt;span class="w"&gt; &lt;/span&gt;parts.slice(-1)[0].slice(0,&lt;span class="w"&gt; &lt;/span&gt;-5);&lt;span class="w"&gt;

                    &lt;/span&gt;var&lt;span class="w"&gt; &lt;/span&gt;article&lt;span class="w"&gt; &lt;/span&gt;=&lt;span class="w"&gt; &lt;/span&gt;"http://patrick.cloke.us/posts/&lt;span class="nt"&gt;&amp;lt;BlogDateHeader&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;$BlogDateHeaderDate$&amp;gt;&lt;span class="nt"&gt;&amp;lt;/BlogDateHeader&amp;gt;&lt;/span&gt;/"&lt;span class="w"&gt; &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;slug;&lt;span class="w"&gt;
                    &lt;/span&gt;window.location.href&lt;span class="w"&gt; &lt;/span&gt;=&lt;span class="w"&gt; &lt;/span&gt;article;&lt;span class="w"&gt;

                    &lt;/span&gt;window.onload&lt;span class="w"&gt; &lt;/span&gt;=&lt;span class="w"&gt; &lt;/span&gt;function()&lt;span class="w"&gt; &lt;/span&gt;{&lt;span class="w"&gt;
                        &lt;/span&gt;document.getElementById("linkrel").href&lt;span class="w"&gt; &lt;/span&gt;=&lt;span class="w"&gt; &lt;/span&gt;article;&lt;span class="w"&gt;
                        &lt;/span&gt;document.getElementById("simplelink").href&lt;span class="w"&gt; &lt;/span&gt;=&lt;span class="w"&gt; &lt;/span&gt;article;&lt;span class="w"&gt;
                    &lt;/span&gt;}&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/ItemPage&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/Blogger&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;MainPage&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"canonical"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"http://patrick.cloke.us/"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/MainPage&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;Blogger&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;ItemPage&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"linkrel"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"canonical"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/ItemPage&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/Blogger&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;MainOrArchivePage&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&amp;lt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"http://patrick.cloke.us"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;$BlogTitle$&amp;gt;&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/MainOrArchivePage&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;Blogger&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;ItemPage&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"simplelink"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
                        &lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;$BlogItemTitle$&amp;gt;&lt;span class="w"&gt;
                    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;$BlogItemBody$&amp;gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/ItemPage&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/Blogger&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Obviously you’ll need to change the URLs, but the key parts here are that we’re
generating a &lt;span class="caps"&gt;URL&lt;/span&gt; based on the date and the full article name. The magic comes in
generating the date. The get it in the format I wanted (&lt;span class="caps"&gt;YYYY&lt;/span&gt;/&lt;span class="caps"&gt;MM&lt;/span&gt;/&lt;span class="caps"&gt;DD&lt;/span&gt;) I modified a
the “Date Header Format” in “Settings” &amp;gt; “Language and formatting”. This matches
how I formatted my URLs in my pelicanconf.py. The &lt;tt class="docutils literal"&gt;slug&lt;/tt&gt; that gets generated
needs to match the slug you used in your template so the link will work. (I had
&lt;a class="reference external" href="https://support.google.com/blogger/answer/42095"&gt;some&lt;/a&gt; &lt;a class="reference external" href="http://www.elizabethcastro.com/blogvqj/extras/templatetags.html"&gt;help&lt;/a&gt; in figuring out these template tags.)&lt;/p&gt;
&lt;p&gt;I’d suggest you check the links to all your articles! A couple of the dates were
messed up in mine (the day was off by one, causing the forwarded location to be broken).&lt;/p&gt;
&lt;p&gt;The last thing to do is to redirect the Atom/&lt;span class="caps"&gt;RSS&lt;/span&gt; feed (if anyone is using that).
Go to “Settings” &amp;gt; “Other” &amp;gt; “Post Feed Redirect &lt;span class="caps"&gt;URL&lt;/span&gt;” and set it to your new
Atom feed &lt;span class="caps"&gt;URL&lt;/span&gt; (wherever that might be).&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="footnote-1" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"/&gt;&lt;col/&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#footnote-reference-1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Pro-tip: You can &lt;a class="reference external" href="https://help.github.com/articles/setting-the-default-branch"&gt;change the “default” branch&lt;/a&gt; of your repository in the
settings page on GitHub.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Cloke</dc:creator><pubDate>Sun, 06 Jul 2014 18:36:00 -0400</pubDate><guid isPermaLink="false">tag:patrick.cloke.us,2014-07-06:/posts/2014/07/06/new-blog-serving-the-content/</guid><category>articles</category><category>blog</category></item><item><title>New Blog</title><link>https://patrick.cloke.us/posts/2014/07/03/new-blog/</link><description>
&lt;p&gt;If you’re reading this you might have noticed that I have a shiny new blog! I
had been pretty disappointed in &lt;a class="reference external" href="https://www.blogger.com/"&gt;Blogger&lt;/a&gt; practically since I started using it.
But it was free, I was a poor college student, etc. I finally managed to get
myself a &lt;a class="reference external" href="http://patrick.cloke.us"&gt;domain name&lt;/a&gt; and set up a more proper blog!&lt;/p&gt;
&lt;p&gt;I was between a few different pieces of blog software (namely &lt;a class="reference external" href="https://wordpress.com/"&gt;WordPress&lt;/a&gt;,
&lt;a class="reference external" href="http://dotclear.org/"&gt;DotClear&lt;/a&gt; and &lt;a class="reference external" href="http://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;) and couldn’t really decide. I loved the idea of the
simplicity of Jekyll, but it’s &lt;a class="reference external" href="http://www.ruby-lang.org/"&gt;Ruby&lt;/a&gt;. (Who’s got time for that?) I wanted
something I could read the code of and understand if necessary. (And it has
been necessary!) My main requirements for blog software were:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Easy to use and set up.&lt;/li&gt;
&lt;li&gt;Free.&lt;/li&gt;
&lt;li&gt;Support for syntax highlighted code blocks. (This was the only “hard” one to
come by.)&lt;/li&gt;
&lt;li&gt;Support for &lt;a class="reference external" href="https://en.wikipedia.org/wiki/RSS"&gt;&lt;span class="caps"&gt;RSS&lt;/span&gt;&lt;/a&gt; feeds.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After a quick Google search for “&lt;a class="reference external" href="https://www.google.com/search?q=jekyll+python"&gt;jekyll python&lt;/a&gt;“, I ended up on &lt;a class="reference external" href="https://hyde.github.io/"&gt;Hyde&lt;/a&gt;. It
seemed alright, but no one seemed to use it. Farther down the page I came across
&lt;a class="reference external" href="http://arunrocks.com/moving-blogs-to-pelican/"&gt;a blog&lt;/a&gt; talking about moving to &lt;a class="reference external" href="http://getpelican.com/"&gt;Pelican&lt;/a&gt;. I was hooked. (Note that I don’t
necessarily agree with all the ideas in that post, it just introduced me to Pelican.)&lt;/p&gt;
&lt;div class="section" id="set-up-pelican"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;Set up Pelican&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;(Since I dislike writing my own descriptions:)&lt;/p&gt;
&lt;blockquote&gt;
“Pelican is a static site generator, written in &lt;a class="reference external" href="http://www.python.org/"&gt;Python&lt;/a&gt;, that requires no
database or server-side logic.”&lt;/blockquote&gt;
&lt;p&gt;Cool! Sounds real simple to use! And it was. Mostly.&lt;/p&gt;
&lt;p&gt;I pretty much followed the &lt;a class="reference external" href="http://docs.getpelican.com/en/3.4.0/quickstart.html"&gt;quickstart&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir&lt;span class="w"&gt; &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;blog/blog&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# The first blog is to store other repos, etc.&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;blog/blog
git&lt;span class="w"&gt; &lt;/span&gt;init&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;checkout&lt;span class="w"&gt; &lt;/span&gt;-b&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# Explained later on.&lt;/span&gt;
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;pandoc&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# If you're not on Mac you'll need to do something else.&lt;/span&gt;
mkvirtualenv&lt;span class="w"&gt; &lt;/span&gt;blog
pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;pelican&lt;span class="w"&gt; &lt;/span&gt;markdown&lt;span class="w"&gt; &lt;/span&gt;Fabric&lt;span class="w"&gt; &lt;/span&gt;ghp_import&lt;span class="w"&gt; &lt;/span&gt;feedparser
pelican-quickstart
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I’ll let you read the rest of the quickstart guide, but it was super quick to
get up and running! (I also referenced another &lt;a class="reference external" href="http://terriyu.info/blog/posts/2013/07/pelican-setup/"&gt;blog post&lt;/a&gt; I found that had some
good information!) I, of course, had no content…but wait I did, it was just
in Blogger!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="importing-content-from-blogger"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;Importing Content from Blogger&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Pelican does not directly support importing from Blogger (&lt;em&gt;Edit: Seems someone
just put up a `pull request`_ to support Blogger natively!&lt;/em&gt;), but it supports
&lt;a class="reference external" href="http://docs.getpelican.com/en/3.4.0/importer.html"&gt;importing from a &lt;span class="caps"&gt;RSS&lt;/span&gt; feed&lt;/a&gt;. The first time I did this it missed a couple of
articles (which I didn’t notice right away), so make sure you bump up the max
amount in the &lt;span class="caps"&gt;URL&lt;/span&gt; like so (this also outputs in the folder “content”):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pelican-import&lt;span class="w"&gt; &lt;/span&gt;--feed&lt;span class="w"&gt; &lt;/span&gt;http://clokep.blogspot.com/feeds/posts/default&lt;span class="se"&gt;\?&lt;/span&gt;alt&lt;span class="se"&gt;\=&lt;/span&gt;rss&lt;span class="se"&gt;\&amp;amp;&lt;/span&gt;max-results&lt;span class="se"&gt;\=&lt;/span&gt;&lt;span class="m"&gt;240&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;content
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No import is ever perfect and I had to clean up a bunch of stuff by hand including:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The slugs did not match the ones from Blogger (this is important later on!)&lt;/li&gt;
&lt;li&gt;Some of the dates were strangely wrong&lt;/li&gt;
&lt;li&gt;Some &lt;span class="caps"&gt;HTML&lt;/span&gt; formatting was included (in particular around &amp;lt;code&amp;gt;/&amp;lt;pre&amp;gt; blocks I
had added).&lt;/li&gt;
&lt;li&gt;Some formatting was messed up.&lt;/li&gt;
&lt;li&gt;The (single) image I had on my blog had to be manually downloaded and added.&lt;/li&gt;
&lt;li&gt;I had bolded things I really wanted to be headers. (This is my fault!)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I probably spent a couple of hours cleaning all the reStructuredText content up,
but now I feel that I have a portable set of all of my blog posts, which I’m
pretty happy about!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="customizing-pelican"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-3"&gt;Customizing Pelican&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I tried a few different themes for Pelican, but eventually settled on just using
and modifying the default theme. I, frankly, haven’t tried it on too many
different systems, so hopefully it doesn’t totally break on small screen sizes
or something. I’m not &lt;span class="caps"&gt;HTML&lt;/span&gt; expert, so I’d rather talk about the other stuff I
modified. (Although, if you’re curious, the main elements I &lt;em&gt;did&lt;/em&gt; modify are
adding the sidebar to the left and the organization of the archives page.)&lt;/p&gt;
&lt;p&gt;Blogger has a concept of “labels”, Pelican has a concept of “category” and
“tags”. I &lt;em&gt;hate&lt;/em&gt; this. What’s the difference? Anyway, I wanted to eradicate the
concept of a “category” (and “authors” since I’m the only one on my blog!), so I
added a few things to my pelicanconf.py:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Disable categories.&lt;/span&gt;
&lt;span class="n"&gt;DISPLAY_CATEGORIES_ON_MENU&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
&lt;span class="n"&gt;DISPLAY_CATEGORY_ON_ARTICLE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;
&lt;span class="n"&gt;CATEGORIES_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;

&lt;span class="c1"&gt;# Disable author pages.&lt;/span&gt;
&lt;span class="n"&gt;AUTHOR_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;
&lt;span class="n"&gt;AUTHORS_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that &lt;tt class="docutils literal"&gt;DISPLAY_CATEGORY_ON_ARTICLE&lt;/tt&gt; is actually a variable I added and
used in the template to not show categories above the list of tags on each article.&lt;/p&gt;
&lt;p&gt;This is getting pretty long so I’ll leave how I’m actually serving this content
to my next article!&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Cloke</dc:creator><pubDate>Thu, 03 Jul 2014 23:04:00 -0400</pubDate><guid isPermaLink="false">tag:patrick.cloke.us,2014-07-03:/posts/2014/07/03/new-blog/</guid><category>articles</category><category>blog</category><category>pelican</category></item><item><title>Blogger RSS Feeds for a Label</title><link>https://patrick.cloke.us/posts/2010/12/08/blogger-rss-feeds-for-label/</link><description>&lt;p&gt;Blogger has crappy support for &lt;span class="caps"&gt;RSS&lt;/span&gt; apparently. I figured if I clicked
on a label, then found the &lt;span class="caps"&gt;RSS&lt;/span&gt; embedded in the page&amp;#8230;it would give me
the &lt;span class="caps"&gt;RSS&lt;/span&gt; feed for that label,&amp;nbsp;right?&lt;/p&gt;
&lt;p&gt;Wrong.&lt;/p&gt;
&lt;p&gt;Of course there&amp;#8217;s an &lt;a class="reference external" href="http://www.google.com/support/blogger/bin/answer.py?hl=en&amp;amp;answer=97933"&gt;&lt;span class="caps"&gt;FAQ&lt;/span&gt;&lt;/a&gt; page about this, but the syntax it gives
is broken. For a specific label (I&amp;#8217;m using the label&amp;nbsp;&amp;#8220;Instantbird&amp;#8221;):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;span class="caps"&gt;RSS&lt;/span&gt;:
&lt;a class="reference external" href="http://clokep.blogspot.com/feeds/posts/default/-/Instantbird?alt=rss"&gt;http://clokep.blogspot.com/feeds/posts/default/-/Instantbird?alt=rss&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Atom: &lt;a class="reference external" href="http://clokep.blogspot.com/feeds/posts/default/-/Instantbird"&gt;http://clokep.blogspot.com/feeds/posts/default/-/Instantbird&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Who knows what versions of &lt;span class="caps"&gt;RSS&lt;/span&gt;/Atom these are. But the feeds do&amp;nbsp;exist.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Cloke</dc:creator><pubDate>Wed, 08 Dec 2010 15:25:00 -0500</pubDate><guid isPermaLink="false">tag:patrick.cloke.us,2010-12-08:/posts/2010/12/08/blogger-rss-feeds-for-label/</guid><category>articles</category><category>blog</category><category>Google</category><category>RSS</category></item></channel></rss>